#+TITLE:  study connection to sql
#+AUTHOR: Óscar Nájera
#+EMAIL:  hello@oscarnajera.com
#+DATE:   2017 Apr 30
#+STARTUP: hideblocks
#+OPTIONS: toc:nil num:nil
* What is on database
Using
#+BEGIN_SRC bash
sqlite3 .testpy3/selfspy.sqlite
#+END_SRC
I enter the database and with the call `.tables` I discover there are
5 tables: (click geometry keys process window)

#+BEGIN_SRC python
  from sqlalchemy import create_engine
  engine = create_engine("sqlite:////home/oscar/dev/selfspy/.testpy3/selfspy.sqlite")
  cnx= engine.connect()
#+END_SRC

#+RESULTS:


#+BEGIN_SRC python :results output
  import sqlite3
  import pandas as pd

  # Create a SQL connection to our SQLite database and transfer to pandas
  con = sqlite3.connect("/home/oscar/dev/selfspy/.testpy3/selfspy.sqlite")
  window = pd.read_sql_query("SELECT * from window", con, index_col='id',
                             parse_dates=['created_at'])
  process = pd.read_sql_query("SELECT * from process", con,
                              index_col='id', parse_dates=['created_at'])
  keys = pd.read_sql_query("SELECT * from keys", con,
                           index_col='id', parse_dates=['created_at', 'started'])
  con.close()
#+END_SRC


#+BEGIN_SRC python
  click = pd.read_sql_query("SELECT * from keys", con)
  click.tail()
#+END_SRC


#+BEGIN_SRC python :tangle ../examples/keypress.py
  # -*- coding: utf-8 -*-
  r"""
  Total Key press by program
  ==========================

  Show the use of the keyboard in each program
  """
  # Author: Óscar Nájera
  # License: 3-clause BSD

  import matplotlib.pyplot as plt
  import sqlite3
  import pandas as pd

  # Create a SQL connection to our SQLite database and transfer to pandas
  con = sqlite3.connect("/home/oscar/dev/selfspy/.testpy3/selfspy.sqlite")

  # Select necessary columns
  process = pd.read_sql_query("SELECT id, name from process", con,
                              index_col='id')
  keys = pd.read_sql_query("SELECT id, process_id, nrkeys from keys", con,
                           index_col='id')
  con.close()

  total_keypress = keys.groupby('process_id').sum()
  total_keypress = pd.merge(total_keypress, process,
                            left_index=True, right_index=True)

  total_keypress.sort_values(by='nrkeys', ascending=False)\
      .plot(x='name', kind='bar', logy=True,
            legend=False)
  plt.ylabel('Total Key Presses')
  plt.xlabel('')
#+END_SRC

#+BEGIN_SRC python :tangle ../examples/active_time.py
  # -*- coding: utf-8 -*-
  r"""
  Total active time by program
  ============================

  Show the use of each program
  """
  # Author: Óscar Nájera
  # License: 3-clause BSD

  import matplotlib.pyplot as plt
  import sqlite3
  import pandas as pd

  # Create a SQL connection to our SQLite database and transfer to pandas
  con = sqlite3.connect("/home/oscar/dev/selfspy/.testpy3/selfspy.sqlite")

  #################################################
  # This gives the agregated statistics of keypress
  process = pd.read_sql_query("SELECT id, name from process", con,
                              index_col='id')

  keys = pd.read_sql_query("SELECT process_id,created_at,nrkeys from keys", con,
                           parse_dates=['created_at'])
  key = keys.pivot('created_at', 'process_id',
                   'nrkeys').fillna(0)  # .unstack(level=0)
  key = key.resample('D').sum().fillna(0)
  key.plot()
  plt.show()

  #################################################

  # Select necessary columns
  keys = pd.read_sql_query("SELECT * from keys", con,
                           index_col='id', parse_dates=['created_at', 'started'])
  keys['created_at'] - keys['started']
#+END_SRC

#+RESULTS:

#+BEGIN_SRC python
  import numpy as np
  import pandas as pd

  # Create some arbitrary event timestamps
  eventA = np.array(np.random.randint(3600, size=8), dtype='M8[m]')
  eventB = np.array(np.random.randint(3600, size=8), dtype='M8[m]')

  # Subtraction works for numpy arrays
  eventA - eventB

  # fails with Series
  pd.Series(eventA) - pd.Series(eventB)
  # TypeError: data type "datetime" not understood

  # fails
  events = pd.DataFrame({'A': eventA,
                         'B': eventB})
  events['A'] - events['B']
  # TypeError: data type "datetime" not understood
#+END_SRC
